version: "3"
services:
  backend:
    container_name: pillars-backend
    build:
      dockerfile: .backend.Dockerfile
      context: ./
    networks:
      - mongodb_go_bridge
      - kafka_go_bridge
      - flink_go_bridge
      - frontend_go_bridge
    volumes:
      - ./backend/:/backend/
    env_file:
      - .env
    ports:
    - 1323:1323
  
  frontend:
    container_name: pillars
    build:
      dockerfile: .frontend.Dockerfile
      context: ./
    networks:
      - frontend_go_bridge
    volumes:
      - ./frontend/:/frontend/
      - /frontend/node_modules
    ports:
      - 333:8080

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    networks:
      - kafka_go_bridge
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    networks:
      - kafka_go_bridge
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mongodb:
    container_name: mongodb 
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017" , "--keyFile", "/etc/mongodb/pki/rsfile.key"]
    image: mongo:latest
    ports:
      - 27017:27017
    volumes:
      - ./container-data/mongo/db:/data/db
      - ./keys/:/etc/mongodb/pki/
      - ./scripts/:/scripts/
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - mongodb_go_bridge
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30

networks:
  mongodb_go_bridge:
    driver: bridge
  kafka_go_bridge:
    driver: bridge
  flink_go_bridge:
    driver: bridge
  frontend_go_bridge:
    driver: bridge
